<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>全自动图床方案分享（不止图片</title>
      <link href="/2024/06/30/quan-zi-dong-tu-chuang-fang-an-fen-xiang-bu-zhi-tu-pian/"/>
      <url>/2024/06/30/quan-zi-dong-tu-chuang-fang-an-fen-xiang-bu-zhi-tu-pian/</url>
      
        <content type="html"><![CDATA[<p>直接上方案：typora + github + vercel</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><blockquote><p>闲来无事想写写blog，但又发现一直以来都没有一个像样的图床，于是决定花点时间来搞一搞，看了网上的方案，使用github作为图床还是比较稳的（关键是免费且不会跑路呀），但鉴于国内访问github的感人速度，CDN加速必不可少，于我而言，可选的cdn加速方案有两个：</p><ul><li>jsdelivr</li><li>vercel</li></ul><p>正好前段时间玩vercel的时候买了域名还在闲置，直接方案二</p></blockquote><p>具体链路也很简单：本地上传 or [服务器上传图片，检测文件变动，自动commit]，图片上传github，vercel自动部署更新，整体耗时也就秒级别，完全够用，当然不止图片，音频、视频文件都可以</p><h2 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h2><p>按照刚才说的步骤：</p><ol><li>建立一个github仓库</li><li>建立<a href="https://vercel.com/new">vercel</a>项目</li><li>本地 or 服务器上传图片</li></ol><p>第一步 过于简单就不赘述了~</p><p>第二步 vercel其实也不复杂，进入官网，绑定github仓库，自动部署即可</p><p>这里放一张图片示例一下好了</p><p><img src="https://wstcly.top/picgo/image-20240630151723344.png" alt="vercel"></p><h3 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h3><p>本地需要安装的软件为typora（md编辑器）、picgo图床管理器</p><p><img src="https://wstcly.top/picgo/image-20240630152022137.png" alt="image-20240630152022137"></p><p><img src="https://wstcly.top/picgo/image-20240630152322853.png" alt="1"></p><p><img src="https://wstcly.top/picgo/2.jpeg" alt="wqeqw"></p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>服务器目录变更，自动git commit</p><h2 id="上代码"><a href="#上代码" class="headerlink" title="上代码"></a>上代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> watchdog.observers <span class="keyword">import</span> Observer</span><br><span class="line"><span class="keyword">from</span> watchdog.events <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> git <span class="keyword">import</span> Repo</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">git_path = <span class="string">&#x27;/www/server/git_project/pic0&#x27;</span></span><br><span class="line"><span class="comment"># pic_path_schema = &#x27;https://cdn.jsdelivr.net/gh/&#123;github用户名&#125;/&#123;github仓库名&#125;@&#123;分支名&#125;/&#123;文件path&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pushgit</span>(<span class="params">ccpath</span>):</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;.git&quot;</span> <span class="keyword">in</span> ccpath):</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">elif</span>(<span class="string">&quot;.tmp&quot;</span> <span class="keyword">in</span> ccpath):</span><br><span class="line">        <span class="built_in">print</span>(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 需要检测的文件目录</span></span><br><span class="line">            repo = Repo(git_path)</span><br><span class="line">            g = repo.git</span><br><span class="line">            g.add(<span class="string">&quot;--all&quot;</span>)</span><br><span class="line">            g.commit(<span class="string">&quot;-m auto update&quot;</span>)</span><br><span class="line">            g.push()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;Successful push!&quot;</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;error push!&quot;</span>)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FileEventHandler</span>(<span class="title class_ inherited__">FileSystemEventHandler</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        FileSystemEventHandler.__init__(self)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">on_moved</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># pushgit(event.src_path)</span></span><br><span class="line">        <span class="comment"># if event.is_directory:</span></span><br><span class="line">        <span class="comment">#     print(&quot;directory moved from &#123;0&#125; to &#123;1&#125;&quot;.format(event.src_path,event.dest_path))</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     print(&quot;file moved from &#123;0&#125; to &#123;1&#125;&quot;.format(event.src_path,event.dest_path))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">on_created</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># pushgit(event.src_path)</span></span><br><span class="line">        <span class="comment"># if event.is_directory:</span></span><br><span class="line">        <span class="comment">#     print(&quot;directory created:&#123;0&#125;&quot;.format(event.src_path))</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     print(&quot;file created:&#123;0&#125;&quot;.format(event.src_path))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">on_deleted</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">        <span class="comment"># pushgit(event.src_path)</span></span><br><span class="line">        <span class="comment"># if event.is_directory:</span></span><br><span class="line">        <span class="comment">#     print(&quot;directory deleted:&#123;0&#125;&quot;.format(event.src_path))</span></span><br><span class="line">        <span class="comment"># else:</span></span><br><span class="line">        <span class="comment">#     print(&quot;file deleted:&#123;0&#125;&quot;.format(event.src_path))</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">on_modified</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> event.is_directory:</span><br><span class="line">            pushgit(event.src_path)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;file modified:&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(event.src_path))</span><br><span class="line">    </span><br><span class="line">          </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    observer = Observer()</span><br><span class="line">    event_handler = FileEventHandler()</span><br><span class="line">    observer.schedule(event_handler, git_path+<span class="string">&#x27;/picgo&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line">    <span class="comment"># 需要检测的文件目录</span></span><br><span class="line">    observer.start()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        observer.stop()</span><br><span class="line">    observer.join()</span><br></pre></td></tr></table></figure><img src="https://wstcly.top//picgo/v2-d5015c05c065ad3943839c63b5ebc855_720w.jpg" alt="test" style="zoom:50%;" />]]></content>
      
      
      
        <tags>
            
            <tag> family </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/06/29/hello-world/"/>
      <url>/2024/06/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
